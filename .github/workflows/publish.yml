name: Release

on: 
  push:
  # Allow manual triggering, e.g. to run end-to-end tests against Dependabot PRs:
  workflow_dispatch:
  # Check for a new jose version once a day:
  schedule:
  # * is a special character in YAML so you have to quote this string
  - cron:  '0 0 * * *'

env:
  CI: true
jobs:
  check-new-version:
    outputs:
      new-version-exists: ${{ steps.check-version.outputs.new-version-exists }}
    runs-on: ubuntu-20.04
    steps:
    - name: "Determine if a version of jose is available that we haven't published a fork for yet."
      id: check-version
      run: |
        JOSE_VERSION=$(npm show jose version)
        FORKED_VERSION=$(npm show @inrupt/jose-legacy-modules version)
        # Our forked version appends jose's version number to "0.0.3-",
        # so we skip those first six characters:
        NEW_VERSION_EXISTS=false; [ $JOSE_VERSION != ${FORKED_VERSION:6} ] && NEW_VERSION_EXISTS=true
        echo "::set-output name=new-version-exists::$NEW_VERSION_EXISTS"
        echo $NEW_VERSION_EXISTS

  build:
    needs: check-new-version
    if: needs.check-new-version.outputs.new-version-exists == 'true'
    runs-on: ubuntu-20.04
    steps:
    - uses: actions/checkout@v2.3.4
    - name: Use Node.js ${{ matrix.node-version }}
      uses: actions/setup-node@v2.4.0
      with:
        node-version: ${{ matrix.node-version }}
    - name: Cache node modules
      uses: actions/cache@v3.0.6
      env:
        cache-name: cache-node-modules
      with:
        path: node_modules
        key: ${{ runner.os }}-node${{ runner.node-version }}-build-${{ env.cache-name }}-${{ hashFiles('**/package-lock.json') }}
    # Unfortunately `npm ci` regularly fails for reasons outside our control (e.g. network errors),
    # so retry it twice if it fails to avoid those:
    # (No, GitHub Actions at this point in time does not have native retry functionality.)
    - run: npm ci || npm ci || npm ci
    # We want to add the current version of jose to our dependencies,
    # so we'll first have to remove it from the devDependencies:
    - run: npm uninstall jose
    - run: npm install --save-exact jose
    - run: npm run build
    - uses: actions/upload-artifact@v2.2.4
      with:
        name: build
        path: |
          node_modules
          dist
          package.json
          package-lock.json

  verify-imports-node:
    needs: [check-new-version, build]
    if: needs.check-new-version.outputs.new-version-exists == 'true'
    runs-on: ubuntu-20.04
    strategy:
      matrix:
        node-version: [16.x, 14.x, 12.x]
    steps:
    - uses: actions/checkout@v2.3.4
    - uses: actions/setup-node@v2.4.0
      with:
        node-version: ${{ matrix.node-version }}
        registry-url: 'https://registry.npmjs.org'
    - uses: actions/download-artifact@v2.0.10
      with:
        name: build
    - name: Install the local package in the packaging test project
      run: |
        cd .github/workflows/cd-packaging-tests/node
        npm link ../../../../
    - name: Verify that the package can be imported in Node from a CommonJS module
      run: |
        cd .github/workflows/cd-packaging-tests/node
        node --unhandled-rejections=strict commonjs.cjs
    - name: Verify that the package can be imported in Node from an ES module
      run: |
        cd .github/workflows/cd-packaging-tests/node
        node --unhandled-rejections=strict esmodule.mjs

  verify-imports-parcel:
    needs: [check-new-version, build]
    if: needs.check-new-version.outputs.new-version-exists == 'true'
    runs-on: ubuntu-20.04
    steps:
    - uses: actions/checkout@v2.3.4
    - uses: actions/setup-node@v2.4.0
      with:
        node-version: '14.x'
        registry-url: 'https://registry.npmjs.org'
    - uses: actions/download-artifact@v2.0.10
      with:
        name: build
    - name: Verify that the package can be imported in a Parcel project
      run: |
        cd .github/workflows/cd-packaging-tests/bundler-parcel
        npm link ../../../../
        # Parcel version currently pinned because of
        # https://github.com/parcel-bundler/parcel/issues/5943
        npx parcel@1.12.3 build index.ts
    - name: Archive Parcel build artifacts
      uses: actions/upload-artifact@v2.2.4
      with:
        name: parcel-dist
        path: .github/workflows/cd-packaging-tests/bundler-parcel/dist

  verify-imports-webpack:
    needs: [check-new-version, build]
    if: needs.check-new-version.outputs.new-version-exists == 'true'
    runs-on: ubuntu-20.04
    steps:
    - uses: actions/checkout@v2.3.4
    - uses: actions/setup-node@v2.4.0
      with:
        node-version: '14.x'
        registry-url: 'https://registry.npmjs.org'
    - uses: actions/download-artifact@v2.0.10
      with:
        name: build
    - name: Verify that the package can be imported in a Webpack project
      run: |
        cd .github/workflows/cd-packaging-tests/bundler-webpack
        npm install webpack@5 webpack-cli buffer
        npm link ../../../../
        npx webpack --devtool source-map
    - name: Archive Webpack build artifacts
      uses: actions/upload-artifact@v2.2.4
      with:
        name: webpack-dist
        path: .github/workflows/cd-packaging-tests/bundler-webpack/dist

  publish-npm:
    needs: [check-new-version, build, verify-imports-node, verify-imports-parcel, verify-imports-webpack]
    if: needs.check-new-version.outputs.new-version-exists == 'true'
    runs-on: ubuntu-20.04
    steps:
    - uses: actions/checkout@v2.3.4
    - name: Prepare for publication to npm
      uses: actions/setup-node@v2.4.0
      with:
        node-version: '14.x'
        registry-url: 'https://registry.npmjs.org'
    - uses: actions/download-artifact@v2.0.10
      with:
        name: build
    - name: Publish to npm
      run: |
        JOSE_VERSION=$(npm show jose version)
        curl https://raw.githubusercontent.com/panva/jose/main/CHANGELOG.md > CHANGELOG.md
        npm version --no-git-tag-version "0.0.3-$JOSE_VERSION"
        npm publish --access public
        echo "Package published. To install, run:"
        echo ""
        echo "    npm install @inrupt/jose-legacy-modules"
      env:
        NODE_AUTH_TOKEN: ${{ secrets.NPM_TOKEN }}
